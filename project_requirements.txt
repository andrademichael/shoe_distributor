Exercise Friday
Ruby Databases with Active Record Active Record Independent Project
Text
Project
Shoe Distribution
Write a program to track shoe brands and what stores they are in. Here are the user stories:

As a user, I want to be able to add, update, delete and list shoe stores.
As a user, I want to be able to add and list new shoe brands.
As a user, I want to be able to add shoe brands in the application (don't worry about updating, listing or destroying shoe brands).
As a user, I want to be able to add existing shoe brands to a store to show where they are sold.
As a user, I want to be able to associate the same brand of shoes with multiple stores.
As a user, I want to be able to see all of the brands a store sells on the individual store page.
As a user, I want store names and shoe brands to be saved with a capital letter no matter how I enter them.
As a user, I do not want stores and shoes to be saved if I enter a blank name.
Further Exploration
Add styling and images to your site for an improved user experience
Complete CRUD functionality for shoe brands
Objectives
Your code will be reviewed for the following objectives:

A many-to-many relationship is successfully implemented.
The project includes at least one functional validation.
The project includes least one functional callback.
All standards from previous weeks are met.
Required functionality was in place before the 5:00pm Friday deadline.
Project is in a polished, portfolio-quality state.
Project demonstrates understanding of this week's concepts. If prompted, you can discuss your code with an instructor using the correct terminology.
Submission
Submit your code for review to the Active Record code review on Epicenter by 5:00pm on Friday.

Visit Independent Projects and Code Reviews for details on how to submit, how feedback works and course completion requirements.
